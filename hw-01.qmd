---
title: "HW 01"
author: "Jiayue He"
format: 
  html:
    embed-resources: true
toc: true
---

## 0 - Setup

```{r} 

if (!require("pacman")) 
  install.packages("pacman")

# use this line for installing/loading
#pacman::p_load() 

devtools::install_github("tidyverse/dsbox")
```

## 1 - Road traffic accidents in Edinburgh

1) get basic dataset: 
```{r label-me-1}
#inspect the document
??accidents
library(ggplot2)
library(dplyr)
install.packages("patchwork")
library(patchwork)
accident<-dsbox::accidents
accident
```
2) start plot_weekdays 
```{r}

#find color website: https://imagecolorpicker.com/en

#weekday_accident <- accident %>% filter(day_of_week %in% c('Monday', 'Tuesday','Wednesday','Thursday','Friday'))

weekday_accident <- accident %>% filter(day_of_week != c('Saturday', 'Sunday'))
weekday_accident

weekday_plot<-ggplot(weekday_accident, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.8) +
  scale_fill_manual(values = c("Fatal" = "#a993b0", "Serious" = "#9ec9c7", "Slight" = "#fef39f"))+ xlab("weekday") +
  ggtitle("weekday")

weekday_plot


```
3) another plot_weekend
```{r}


weekend_accident <- accident %>% filter(day_of_week %in% c('Saturday', 'Sunday'))
weekend_accident


weekend_plot<-ggplot(weekend_accident, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.8) +
  scale_y_continuous(breaks = c(0, 1e-05, 2e-05)) +
  scale_fill_manual(values = c("Fatal" = "#a993b0", "Serious" = "#9ec9c7", "Slight" = "#fef39f"))+ xlab("Time of day")+
  ggtitle("weekend")

weekend_plot

```
4) integrate the plot 
```{r}

weekday_accident$day_type <- 'Weekday'
weekend_accident$day_type <- 'Weekend'

total_accidents <- bind_rows(weekday_accident, weekend_accident)
total_accidents

combined_plot <- ggplot(total_accidents, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.8) +
  facet_wrap(~ day_type, ncol = 1, scales = 'fixed') +
  scale_fill_manual(values = c("Fatal" = "#a993b0", "Serious" = "#9ec9c7", "Slight" = "#fef39f")) +
  labs(title = "Number of accidents throughout the day",
       subtitle = "By day of week and severity",
       x = "Time of day",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0), 
        plot.subtitle = element_text(hjust = 0),
        legend.position = "right")

combined_plot

```
5) interpret in context of the data: 

1) The plot plots Number of accidents throughout the day based on two catalogs: weekday accidents and weekend accidents. the x axis represents the time period in a day, while the y axis represents the density of the accident. There are three categories of accidents, namely slight accident, serious accident, and fatal accident. 

2) The plot reflects the Number of accidents happened throughout the day, in a whole week including weekdays and weekend, the slight accident happens most frequently on average in a day. 

3) In the weekdays, the fatal accident happens most frequently between 11:00 to 12:00, and both slight and serious accident happens most frequently around 17:00 in a day. 

4) In the weekend, there is no fatal accident, and the slight accident happens most frequently around 16:00, and serious accident happens most frequently around 19:00. 

5) The plot also compares the number of accidents between weekdays and weekend. It show that there is no fatal accident happened on weekend, and the peaks of all kind of accidents happened on weekend are lower than that on weekdays. 

In summary, these plots can provide insights about when accidents are more likely to occur and how accident severity distributions over a day during a week. 

## 2 - NYC marathon winners

loading packages and dataset: 

```{r label-me-2}
install.packages("openintro")
install.packages("airports")
install.packages("cherryblossom")
install.packages("usdata")
library(openintro)
nyc_marathon
```
a. Create a histogram and a box plot of the distribution of marathon times of all runners in the dataset. What features of the distribution are apparent in the histogram and not the box plot? What features are apparent in the box plot but not in the histogram?

1) histogram: 
```{r label-me-2}

hist_plot <- ggplot(nyc_marathon, aes(x = time_hrs)) +
  geom_histogram(binwidth = 0.05, fill = 'yellow', color = 'black') +
  labs(title = 'Histogram', x = 'Time_Hours', y = 'Runners')



hist_plot 
```
2) box plot: 
```{r label-me-2}

box_plot <- ggplot(nyc_marathon, aes(x = time_hrs)) +
  geom_boxplot(fill = 'yellow') +
  labs(title = 'Box Plot ', x = 'Time_Hours')

box_plot

```
3) What features of the distribution are apparent in the histogram and not the box plot? 
  a) It shows a general distribution.
  b) The distribution is right-skewed. 
  c) There are two peaks, which can tell at which time period most of runner funish the marathon. 
  

4) What features are apparent in the box plot but not in the histogram?
  a) It shows that there are four outliners. 
  b) The horizontal line tells that the normal finishing time
  c) the vertical line tell the medium
  d) It also tells the interquartile range which present about 1/2 data 


b. Create a side-by-side box plots of marathon times for men and women. Use different colors for the each of the box plots â€“ do not use the default colors, but instead manually define them (you can choose any two colors you want). Based on the plots you made, compare the distribution of marathon times for men and women.

```{r}


men_nyc_marathon <- nyc_marathon %>% filter(division %in% c('Men'))
men_nyc_marathon

women_nyc_marathon <- nyc_marathon%>% filter(division %in% c('Women'))
women_nyc_marathon

y_min <- min(nyc_marathon$time_hrs, na.rm = TRUE)
y_max <- max(nyc_marathon$time_hrs, na.rm = TRUE)


men_box_plot <- ggplot(men_nyc_marathon, aes(y = time_hrs)) +
  geom_boxplot(fill = 'green') +
  labs(title = 'man', y = 'Time_Hours')+
  coord_cartesian(ylim = c(y_min, y_max)) 
men_box_plot

women_box_plot <- ggplot(women_nyc_marathon, aes(y = time_hrs)) +
  geom_boxplot(fill = 'red') +
  labs(title = 'woman ', y = 'Time_Hours')+
  coord_cartesian(ylim = c(y_min, y_max)) 
women_box_plot


side_box_plot<-men_box_plot|women_box_plot

side_box_plot

#Based on the plots you made, compare the distribution of marathon times for men and women: 

#compared distribution, it shows that women used more time to finish the marathon then men.
  
```

c. What information in the above plot is redundant? Redo the plot avoiding this redundancy. How does this update change the data-to-ink ratio?

```{r}

new_side_box_plot<-ggplot(nyc_marathon, aes(x = division, y = time_hrs, fill = division)) +
  geom_boxplot() +
  scale_fill_manual(values = c("Men" = "green", "Women" = "red")) +  
  labs(title = "Marathon Times for Men and Women",
       x = "Division",
       y = "time_hour") +
  theme_minimal()  

new_side_box_plot

#How does this update change the data-to-ink ratio?

# in the previous question, I created two basic graphs, and then combine them together. The background is dark, and there are two y axis lables, and the women's label is even in the middle of the graph which can be district. 

#while in this new graph, I plot two plots in one single plot and put them side-by-side. I also used theme_minimal() to reduce the unnecessary background color so the main graph can be more distinct. 

#in addition, in the previous graph, there are two title, but in the new graph, the title turns to the x-axis label which reduce the ink and make it is more convinent to observe and compare. 
```
d. Visualize the marathon times of men and women over the years. As is usual with time series plot, year should go on the x-axis. Use different colors and shapes to represent the times for men and women. Make sure your colors match those in the previous part. Once you have your plot, describe what is visible in this plot but not in the others.

```{r}

over_year_plot <- ggplot(nyc_marathon, aes(x = year, y = time_hrs, color = division, shape = division)) +
  geom_point() + 
  scale_color_manual(values = c("Men" = "green", "Women" ="red")) +
  scale_shape_manual(values = c("Men" = 17, "Women" = 15)) + 
  labs(title = 'Marathon Times Over the Years', x = 'Year', y = "Time_Hours") +
  theme_minimal()  

over_year_plot

#describe what is visible in this plot but not in the others.

#1) this plot can show the trend of marathon finish times acorss the year for both men and women. 
#2) It also shows that after 1980, the finish time dropped largely for both man and women 
#3) This plot also show the finsih time differnece between men and women. It looks like the difference of time between men and women was similar over the years. 


```


## 3 - US counties
a. What does the following code do? Does it work? Does it make sense? Why/why not?

```{r}
county_complete

#document: https://cran.r-project.org/web/packages/usdata/usdata.pdf
#Demographic data on the United States at the county and state levels spanning multiple years.

??contry
ggplot(county) +
  geom_point(aes(x = median_edu, y = median_hh_income)) +
  geom_boxplot(aes(x = smoking_ban, y = pop2017))

#1) What does the following code do? 
  #based on the code, it looks like that it tries to 
  #1) plot the relationship between education level and median household income.
  #2) the relationship between the what type of county-level smoking ban in place in 2010 (none, partial, comprehensive) and population in 2017 

#2) Does it work?
  #based on the graph, it looks like both geom_point and geom_boxplot are on the plot, but the relationships look unclear. I would say the code does not work in its expected way and 

#3) Does it make sense? Why/why not?
  #I think the code and plots are not making sense. since those two relationships are not related, it does not make sense to plot them into one single plot. 

```

b. Which of the following two plots makes it easier to compare poverty levels (poverty) across people from different median education levels (median_edu)? What does this say about when to place a faceting variable across rows or columns?
```{r}
ggplot(county %>% filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(median_edu ~ .)



ggplot(county %>% filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(. ~ median_edu)


#1) Which of the following two plots makes it easier to compare poverty levels (poverty) across people from different median education levels (median_edu)?
#the second one makes it easier to compare poverty levels across people from different median education levels.Because it makes poverty percentage as the shared axis across different categories. Also, it make the scale of poverty axis lager which is more clear to see the poverty level of the points. In such as way, it allows direct and clear  comparison between poverty and education level. 

#2)  What does this say about when to place a faceting variable across rows or columns?
  #(variable ~.) make graph horizontally align, it is useful when people want to compare changes across the y axis for different categories. 
  #(.~ variable) makes graph vertically align, it is useful when people want to compare changes across. the x axis for different categories. 

```

c. Recreate the R code necessary to generate the following graphs. Note that wherever a categorical variable is used in the plot, itâ€™s metro.

```{r}
#plot A
PlotA<-ggplot(county,aes(x = homeownership, y = poverty)) + 
  geom_point() + 
  ggtitle("Plot A")
PlotA

#plot B
PlotB<-ggplot(county,aes(x = homeownership, y = poverty)) + 
  geom_point() + 
  geom_smooth(method = "loess", color = "blue", se = FALSE) + 
  ggtitle("Plot B")
PlotB

#plot C
PlotC<-ggplot(county,aes(x = homeownership, y = poverty)) + 
  geom_point() + 
  geom_smooth(aes(fill = metro), color = "green", se = FALSE) + 
  ggtitle("Plot C")+
  theme(legend.position = "none")

PlotC

#plot D
PlotD<-ggplot(county,aes(x = homeownership, y = poverty)) + 
  geom_smooth(aes(fill = metro), color = "blue", se = FALSE) + 
  geom_point() + 
  ggtitle("Plot D")+
  theme(legend.position = "none")
PlotD


```

## 4 - Rental apartments in SF

```{r}
```


```{r}
```

```{r}
```

## 5 - Napoleonâ€™s march.
```{r}

```
