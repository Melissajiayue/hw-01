---
title: "HW 01"
author: "Jiayue He"
format: 
  html:
    embed-resources: true
toc: true
---

## 0 - Setup

```{r} 

if (!require("pacman")) 
  install.packages("pacman")

# use this line for installing/loading
#pacman::p_load() 

devtools::install_github("tidyverse/dsbox")
```

## 1 - Road traffic accidents in Edinburgh

1) get basic dataset: 
```{r label-me-1}
#inspect the document
??accidents
library(ggplot2)
library(dplyr)
install.packages("patchwork")
library(patchwork)
accident<-dsbox::accidents
accident
```
2) start plot_weekdays 
```{r}

#find color website: https://imagecolorpicker.com/en

#weekday_accident <- accident %>% filter(day_of_week %in% c('Monday', 'Tuesday','Wednesday','Thursday','Friday'))

weekday_accident <- accident %>% filter(day_of_week != c('Saturday', 'Sunday'))
weekday_accident

weekday_plot<-ggplot(weekday_accident, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.8) +
  scale_fill_manual(values = c("Fatal" = "#a993b0", "Serious" = "#9ec9c7", "Slight" = "#fef39f"))+ xlab("weekday") +
  ggtitle("weekday")

weekday_plot


```
3) another plot_weekend
```{r}


weekend_accident <- accident %>% filter(day_of_week %in% c('Saturday', 'Sunday'))
weekend_accident


weekend_plot<-ggplot(weekend_accident, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.8) +
  scale_y_continuous(breaks = c(0, 1e-05, 2e-05)) +
  scale_fill_manual(values = c("Fatal" = "#a993b0", "Serious" = "#9ec9c7", "Slight" = "#fef39f"))+ xlab("Time of day")+
  ggtitle("weekend")

weekend_plot

```
4) integrate the plot 
```{r}

weekday_accident$day_type <- 'Weekday'
weekend_accident$day_type <- 'Weekend'

total_accidents <- bind_rows(weekday_accident, weekend_accident)
total_accidents

combined_plot <- ggplot(total_accidents, aes(x = time, fill = severity)) +
  geom_density(alpha = 0.8) +
  facet_wrap(~ day_type, ncol = 1, scales = 'fixed') +
  scale_fill_manual(values = c("Fatal" = "#a993b0", "Serious" = "#9ec9c7", "Slight" = "#fef39f")) +
  labs(title = "Number of accidents throughout the day",
       subtitle = "By day of week and severity",
       x = "Time of day",
       y = "Density") +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0), 
        plot.subtitle = element_text(hjust = 0),
        legend.position = "right")

combined_plot

```
5) interpret in context of the data: 

1) The plot plots Number of accidents throughout the day based on two catalogs: weekday accidents and weekend accidents. the x axis represents the time period in a day, while the y axis represents the density of the accident. There are three categories of accidents, namely slight accident, serious accident, and fatal accident. 

2) The plot reflects the Number of accidents happened throughout the day, in a whole week including weekdays and weekend, the slight accident happens most frequently on average in a day. 

3) In the weekdays, the fatal accident happens most frequently between 11:00 to 12:00, and both slight and serious accident happens most frequently around 17:00 in a day. 

4) In the weekend, there is no fatal accident, and the slight accident happens most frequently around 16:00, and serious accident happens most frequently around 19:00. 

5) The plot also compares the number of accidents between weekdays and weekend. It show that there is no fatal accident happened on weekend, and the peaks of all kind of accidents happened on weekend are lower than that on weekdays. 

In summary, these plots can provide insights about when accidents are more likely to occur and how accident severity distributions over a day during a week. 

## 2 - NYC marathon winners

loading packages and dataset: 

```{r label-me-2}
install.packages("openintro")
install.packages("airports")
install.packages("cherryblossom")
install.packages("usdata")
library(openintro)
nyc_marathon
```
a. Create a histogram and a box plot of the distribution of marathon times of all runners in the dataset. What features of the distribution are apparent in the histogram and not the box plot? What features are apparent in the box plot but not in the histogram?

1) histogram: 
```{r label-me-2}

hist_plot <- ggplot(nyc_marathon, aes(x = time_hrs)) +
  geom_histogram(binwidth = 0.05, fill = '#fef39f', color = 'black') +
  labs(title = 'Histogram', x = 'Time_Hours', y = 'Runners')



hist_plot 
```
2) box plot: 
```{r label-me-2}

box_plot <- ggplot(nyc_marathon, aes(x = time_hrs)) +
  geom_boxplot(fill = 'green') +
  labs(title = 'Box Plot ', x = 'Time_Hours')

box_plot

```
3) What features of the distribution are apparent in the histogram and not the box plot? 
  a) 


4) What features are apparent in the box plot but not in the histogram?
  a) 


b. Create a side-by-side box plots of marathon times for men and women. Use different colors for the each of the box plots – do not use the default colors, but instead manually define them (you can choose any two colors you want). Based on the plots you made, compare the distribution of marathon times for men and women.

```{r}

```
c. What information in the above plot is redundant? Redo the plot avoiding this redundancy. How does this update change the data-to-ink ratio?

```{r}


```
d. Visualize the marathon times of men and women over the years. As is usual with time series plot, year should go on the x-axis. Use different colors and shapes to represent the times for men and women. Make sure your colors match those in the previous part. Once you have your plot, describe what is visible in this plot but not in the others.
```{r}


```


## 3 - US counties
a. What does the following code do? Does it work? Does it make sense? Why/why not?
```{r}
??contry
ggplot(county) +
  geom_point(aes(x = median_edu, y = median_hh_income)) +
  geom_boxplot(aes(x = smoking_ban, y = pop2017))
```
b. Which of the following two plots makes it easier to compare poverty levels (poverty) across people from different median education levels (median_edu)? What does this say about when to place a faceting variable across rows or columns?
```{r}
ggplot(county %>% filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(median_edu ~ .)
```
```{r}
ggplot(county %>% filter(!is.na(median_edu))) + 
  geom_point(aes(x = homeownership, y = poverty)) + 
  facet_grid(. ~ median_edu)
```

c. Recreate the R code necessary to generate the following graphs. Note that wherever a categorical variable is used in the plot, it’s metro.

```{r}
```

## 4 - Rental apartments in SF

```{r}
```


```{r}
```

```{r}
```

## 5 - Napoleon’s march.
```{r}

```
